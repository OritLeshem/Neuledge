import { Scalar } from '../scalar';
export type NumberScalar = number;
export declare const NumberScalar: import("../generator").CallableScalar<{
    min: {
        type: Scalar<number, number, number, "number">;
        nullable: true;
    };
    max: {
        type: Scalar<number, number, number, "number">;
        nullable: true;
    };
    after: {
        type: Scalar<number, number, number, "number">;
        nullable: true;
    };
    below: {
        type: Scalar<number, number, number, "number">;
        nullable: true;
    };
    finite: {
        type: Scalar<boolean, (true | 1 | "true" | "yes" | "True" | "Yes" | "TRUE" | "YES") | (false | 0 | "false" | "no" | "False" | "No" | "FALSE" | "NO"), boolean, "boolean">;
        nullable: true;
    };
    precision: {
        type: Scalar<number, number, number, "number">;
        nullable: true;
    };
    scale: {
        type: Scalar<number, number, number, "number">;
        nullable: true;
    };
}, number, number, number, "number">;
//# sourceMappingURL=number.d.ts.map