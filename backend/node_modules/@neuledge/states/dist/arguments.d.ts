import { ArgumentNode } from '@neuledge/states-parser';
export type Arguments<T extends {
    node?: unknown;
}> = Record<string, Argument<T>>;
export interface Argument<T extends {
    node?: unknown;
}> {
    type: 'Argument';
    node: ArgumentNode<T['node']>;
    name: string;
    value: T;
}
export declare const parseArguments: <T extends {
    node: unknown;
}>(nodes: ArgumentNode<T["node"]>[], parser: (node: T["node"]) => T) => Arguments<T>;
//# sourceMappingURL=arguments.d.ts.map