import { Literal, NullLiteral } from '../literal';
import { ParametersContext } from '../parameter';
import { ExpressionNode } from '@neuledge/states-parser';
import { BinaryExpression } from './binary';
import { CallExpression } from './call';
import { IdentifierExpression } from './identifier';
import { LogicalExpression } from './logical';
import { MemberExpression } from './member';
import { ThisExpression } from './this';
import { UnaryExpression } from './unary';
export type Expression = CallExpression | IdentifierExpression | ThisExpression | MemberExpression | UnaryExpression | BinaryExpression | LogicalExpression | NullLiteral | Literal;
export declare const parseExpression: (params: ParametersContext, node: ExpressionNode) => Expression & {
    node: ExpressionNode;
};
//# sourceMappingURL=expression.d.ts.map