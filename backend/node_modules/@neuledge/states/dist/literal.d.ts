import { LiteralNode, LiteralValue, NullLiteralNode } from '@neuledge/states-parser';
export interface Literal<T extends LiteralValue = LiteralValue> {
    type: 'Literal';
    node?: LiteralNode<T>;
    value: T;
}
export declare const parseLiteral: <T extends LiteralValue = LiteralValue>(node: LiteralNode<T>) => Literal<T> & {
    node: LiteralNode<T>;
};
export interface NullLiteral {
    type: 'NullLiteral';
    node: NullLiteralNode;
    value: null;
}
export declare const parseNullLiteral: (node: NullLiteralNode) => NullLiteral;
//# sourceMappingURL=literal.d.ts.map