/// <reference types="node" />
export type StoreScalarValue = null | string | number | bigint | boolean | Buffer | Date | {
    [key in string]?: StoreScalarValue;
} | StoreScalarValue[];
export declare const isStoreScalarValueEqual: (a: StoreScalarValue | undefined, b: StoreScalarValue | undefined) => boolean;
export declare const uniqueStoreScalarValues: <T extends StoreScalarValue | undefined>(values: T[]) => T[];
export declare const getStoreScalarValueKey: (value: StoreScalarValue | undefined) => string | number | bigint | boolean | null;
//# sourceMappingURL=value.d.ts.map