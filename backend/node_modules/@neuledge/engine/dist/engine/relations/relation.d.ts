import { StoreJoin, StoreJoinBy, StoreJoinChoice } from '@neuledge/store';
import { Metadata, MetadataCollection } from '../../metadata';
import { StateDefinition } from '../../definitions';
interface RelationOptions<T extends {
    states?: StateDefinition[] | null;
}> {
    collection: MetadataCollection;
    by: StoreJoinBy;
    query: T;
}
/**
 * Convert relation query options to store join options.
 * This function designed to be used with query match, populate, expand, etc.
 */
export declare const convertRelationQueryOptions: <T extends {
    [x: string]: {
        states?: StateDefinition<string, any>[] | null | undefined;
    } | undefined;
}, R extends StoreJoinChoice>(metadata: Metadata, collection: MetadataCollection, relationQueries: T, convert: (relation: RelationOptions<NonNullable<T[keyof T]>>) => R) => StoreJoin<R>;
export {};
//# sourceMappingURL=relation.d.ts.map