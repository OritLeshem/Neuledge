import { StoreDocument } from '@neuledge/store';
import { StateDefinition } from '../../definitions';
import { Entity, ProjectedEntity } from '../../entity';
import { EntityList } from '../../list';
import { ReturnQueryOptions, Select, SelectQueryOptions } from '../../queries';
export interface AlteredEntity<S extends StateDefinition> {
    oldEntity: Entity<S> | null;
    entity: Entity<S>;
    document: StoreDocument;
}
export declare const retrieveEntities: <S extends StateDefinition<string, any>, P extends Select<S>>(entities: EntityList<AlteredEntity<S>>, { returns, select }: Partial<ReturnQueryOptions> & SelectQueryOptions<S, P>) => Promise<void | EntityList<ProjectedEntity<S, P>> | EntityList<Entity<S>>>;
//# sourceMappingURL=retrieve.d.ts.map