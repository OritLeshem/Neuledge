import { Entity } from '../entity';
import { StateDefinition } from '../definitions';
import { EntityList } from '../list';
import { Metadata } from '../metadata/metadata';
import { StoreDocument, StoreList } from '@neuledge/store';
import { MetadataCollection } from '../metadata';
export declare const toEntityList: <S extends StateDefinition<string, any>>(metadata: Metadata, collection: MetadataCollection, list: StoreList) => EntityList<Entity<S>>;
export declare const toEntityListOrThrow: <S extends StateDefinition<string, any>>(metadata: Metadata, collection: MetadataCollection, list: StoreList) => EntityList<Entity<S>>;
export declare const toMaybeEntity: <S extends StateDefinition<string, any>>(metadata: Metadata, collection: MetadataCollection, document: StoreDocument | undefined) => Entity<S> | null;
export declare const toEntityOrThrow: <S extends StateDefinition<string, any>>(metadata: Metadata, collection: MetadataCollection, document: StoreDocument | undefined) => Entity<S>;
//# sourceMappingURL=entity.d.ts.map