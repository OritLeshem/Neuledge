/// <reference types="node" />
import { StateSnapshot, StateFieldSnapshot } from '../../metadata';
export interface StoreMetadataState {
    collectionName: string;
    name: string;
    hash: Buffer;
    fields: StoreMetadataStateField[];
    relations: StoreMetadataStateRelation[];
    v: StoreMetadataStateVersion;
}
export declare enum StoreMetadataStateVersion {
    V0 = 0
}
interface StoreMetadataStateField {
    name: string;
    type: string;
    indexes: number[];
    nullable: boolean;
}
interface StoreMetadataStateRelation {
    name: string;
    stateHashes: Buffer[];
    index: number;
}
export declare const fromStoreMetadataState: (getState: (hash: Buffer) => StateSnapshot, getType: (key: string) => StateFieldSnapshot['type'], doc: StoreMetadataState) => StateSnapshot;
export declare const toStoreMetadataState: (state: StateSnapshot) => StoreMetadataState;
export {};
//# sourceMappingURL=state.d.ts.map