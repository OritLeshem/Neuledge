import { StateDefinition } from '../../definitions';
import { Entity, ProjectedEntity } from '../../entity';
import { EntityList } from '../../list';
import { InitManyQueryOptions, InitOneQueryOptions, Select } from '../../queries';
import { NeuledgeEngine } from '../engine';
export declare const execInitMany: <S extends StateDefinition<string, any>>(engine: NeuledgeEngine, options: InitManyQueryOptions<S, S> | InitOneQueryOptions<S, S>) => Promise<void | EntityList<Entity<S>> | EntityList<ProjectedEntity<S, Select<S>>>>;
export declare const execInitOne: <S extends StateDefinition<string, any>>(engine: NeuledgeEngine, options: InitOneQueryOptions<S, S>) => Promise<void | Entity<S> | ProjectedEntity<S, Select<S>>>;
//# sourceMappingURL=init.d.ts.map