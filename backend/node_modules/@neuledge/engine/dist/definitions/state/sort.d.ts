export type SortDefinition<T> = readonly SortedField<keyof T & string>[];
export type SortDefinitionKey<K extends SortedField<string>> = K extends SortedField<infer R> ? R : never;
type SortedField<K extends string> = `${'+' | '-'}${K}`;
export declare const parseSortedField: <K extends string>(field: `+${K}` | `-${K}`) => [name: K, sort: "desc" | "asc"];
export declare const fromSortedField: <K extends string>(field: `+${K}` | `-${K}`) => string;
export {};
//# sourceMappingURL=sort.d.ts.map