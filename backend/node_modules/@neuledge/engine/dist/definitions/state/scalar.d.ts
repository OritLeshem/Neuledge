import { Scalar } from '@neuledge/scalars';
import { StateDefinition } from './state';
export type StateDefintionScalar<V = any> = {
    type: StateDefinitionScalarType<NonNullable<V>>;
    index: number;
    nullable?: boolean;
};
export type StateDefinitionScalarType<V> = Scalar<V, any, any> | readonly StateDefinition<string, V>[];
export declare const isStateDefinitionScalarTypeScalar: <V>(type: StateDefinitionScalarType<V>) => type is Scalar<V, any, any, "string" | "number" | "boolean" | "json" | "binary" | "enum" | "date-time">;
export declare const isStateDefinitionScalarTypeStates: <V>(type: StateDefinitionScalarType<V>) => type is readonly StateDefinition<string, V>[];
//# sourceMappingURL=scalar.d.ts.map