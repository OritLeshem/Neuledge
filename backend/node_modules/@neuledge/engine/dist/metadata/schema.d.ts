import { MetadataState, MetadataStateField } from './state';
/**
 * Metadata schema contain for each where path a set of choices, each choice
 * can be a field or a sub schema.
 */
export type MetadataSchema = {
    [Path in string]?: MetadataSchemaChoice[];
};
/**
 * A schema choice can be a field or a sub schema.
 */
export type MetadataSchemaChoice = {
    field: MetadataStateField;
    schema?: never;
} | {
    field?: never;
    schema: MetadataSchema;
};
/**
 * Get the metadata schema from the given states.
 * This function will be used recursively to build the schema for the relation
 * fields. If a relation parent provided, only include the fields that are under
 * the parent path will be included.
 */
export declare const getMetadataSchema: (states: MetadataState[], relationParent?: {
    state: MetadataState;
    path: string;
}) => MetadataSchema;
//# sourceMappingURL=schema.d.ts.map