import { StateDefinition, StateName } from '../../definitions';
import { MetadataStateField } from './field';
import { StateSnapshot, StateRelationSnapshot } from './snapshot';
export type MetadataStateContext = Partial<Record<StateName, MetadataState>>;
export interface MetadataStateReservedNames {
    hash: string;
    version: string;
}
export interface MetadataStateRelation extends StateRelationSnapshot {
    states: MetadataState[];
    path: string;
}
export declare class MetadataState extends StateSnapshot {
    fields: MetadataStateField[];
    instance: StateDefinition;
    reservedNames: MetadataStateReservedNames;
    relations: MetadataStateRelation[];
    transforms: MetadataState[];
    static fromDefinition: (ctx: MetadataStateContext, state: StateDefinition, collectionName?: string) => MetadataState;
    private constructor();
}
//# sourceMappingURL=state.d.ts.map