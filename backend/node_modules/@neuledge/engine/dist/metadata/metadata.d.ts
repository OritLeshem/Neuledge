import { StateDefinition } from '../definitions';
import { MetadataCollection } from './collection';
import { MetadataState } from './state';
import { MetadataSnapshot } from './snapshot';
import { MetadataChange } from './change';
/**
 * Metadata is a snapshot of the current state of the database, including all
 * the states, fields, and types instances that are currently used in the
 * codebase.
 */
export declare class Metadata extends MetadataSnapshot<MetadataState> {
    private collections;
    constructor(states: Iterable<StateDefinition>);
    get listCollections(): MetadataCollection[];
    getCollectionByMetadataState(state: MetadataState): MetadataCollection;
    getCollections(states: readonly StateDefinition[]): MetadataCollection[];
    sync(snapshot: MetadataSnapshot): MetadataChange[];
}
//# sourceMappingURL=metadata.d.ts.map