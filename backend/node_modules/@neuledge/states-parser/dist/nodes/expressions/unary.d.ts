import { TokenCursor } from "../../tokens";
import { AbstractNode } from '../abstract';
import { ExpressionNode } from './expression';
declare const UnaryExpressionNodeOperators: {
    readonly '!': 1;
    readonly '-': 1;
    readonly '+': 1;
    readonly '~': 1;
};
export interface UnaryExpressionNode extends AbstractNode<'UnaryExpression'> {
    operator: keyof typeof UnaryExpressionNodeOperators;
    argument: ExpressionNode;
}
export declare const isUnaryExpressionNodeOperator: (operator: string) => operator is "-" | "+" | "!" | "~";
export declare const parseUnaryExpressionNode: (cursor: TokenCursor) => UnaryExpressionNode;
export {};
//# sourceMappingURL=unary.d.ts.map