import { TokenCursor } from "../tokens";
import { AbstractNode } from './abstract';
import { IdentifierNode } from './identifier';
export interface ArgumentNode<Value> extends AbstractNode<'Argument'> {
    key: IdentifierNode;
    value: Value;
}
export declare const parseMaybeArgumentNodes: <Value>(cursor: TokenCursor, parseValue: (cursor: TokenCursor) => Value, allowImplicit?: boolean) => ArgumentNode<Value>[];
export declare const parseArgumentNodes: <Value>(cursor: TokenCursor, parseValue: (cursor: TokenCursor) => Value, allowImplicit?: boolean) => ArgumentNode<Value>[];
//# sourceMappingURL=argument.d.ts.map